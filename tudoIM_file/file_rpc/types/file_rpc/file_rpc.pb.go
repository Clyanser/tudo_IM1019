// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: file_rpc.proto

package file_rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfoRequest) Reset() {
	*x = FileInfoRequest{}
	mi := &file_file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoRequest) ProtoMessage() {}

func (x *FileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoRequest.ProtoReflect.Descriptor instead.
func (*FileInfoRequest) Descriptor() ([]byte, []int) {
	return file_file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FileInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileHash      string                 `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileType      string                 `protobuf:"bytes,4,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"` //文件后缀
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfoResponse) Reset() {
	*x = FileInfoResponse{}
	mi := &file_file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoResponse) ProtoMessage() {}

func (x *FileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoResponse.ProtoReflect.Descriptor instead.
func (*FileInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfoResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfoResponse) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *FileInfoResponse) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileInfoResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

var File_file_rpc_proto protoreflect.FileDescriptor

const file_file_rpc_proto_rawDesc = "" +
	"\n" +
	"\x0efile_rpc.proto\x12\bfile_rpc\"*\n" +
	"\x0fFileInfoRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"\x86\x01\n" +
	"\x10FileInfoResponse\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x1b\n" +
	"\tfile_hash\x18\x02 \x01(\tR\bfileHash\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\x03R\bfileSize\x12\x1b\n" +
	"\tfile_type\x18\x04 \x01(\tR\bfileType2J\n" +
	"\x05Files\x12A\n" +
	"\bFileInfo\x12\x19.file_rpc.FileInfoRequest\x1a\x1a.file_rpc.FileInfoResponseB\fZ\n" +
	"./file_rpcb\x06proto3"

var (
	file_file_rpc_proto_rawDescOnce sync.Once
	file_file_rpc_proto_rawDescData []byte
)

func file_file_rpc_proto_rawDescGZIP() []byte {
	file_file_rpc_proto_rawDescOnce.Do(func() {
		file_file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_rpc_proto_rawDesc), len(file_file_rpc_proto_rawDesc)))
	})
	return file_file_rpc_proto_rawDescData
}

var file_file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_file_rpc_proto_goTypes = []any{
	(*FileInfoRequest)(nil),  // 0: file_rpc.FileInfoRequest
	(*FileInfoResponse)(nil), // 1: file_rpc.FileInfoResponse
}
var file_file_rpc_proto_depIdxs = []int32{
	0, // 0: file_rpc.Files.FileInfo:input_type -> file_rpc.FileInfoRequest
	1, // 1: file_rpc.Files.FileInfo:output_type -> file_rpc.FileInfoResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file_rpc_proto_init() }
func file_file_rpc_proto_init() {
	if File_file_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_rpc_proto_rawDesc), len(file_file_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_rpc_proto_goTypes,
		DependencyIndexes: file_file_rpc_proto_depIdxs,
		MessageInfos:      file_file_rpc_proto_msgTypes,
	}.Build()
	File_file_rpc_proto = out.File
	file_file_rpc_proto_goTypes = nil
	file_file_rpc_proto_depIdxs = nil
}
